// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique @db.VarChar(70)
  name String @db.VarChar(40)
  roles Role[] @default([USER])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  active Boolean @default(true)
  banned Boolean @default(false)
  workspaces Workspace[]
  columns Column[]
  cards Card[]
  comments Comment[]

  @@map("users")

}

model Workspace {
  id String @id @default(uuid())
  title String @db.VarChar(70)
  description String? @db.VarChar(400)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  User User @relation(fields: [userId], references: [id])
  userId String
  columns Column[]
  active Boolean @default(true)
  locked Boolean @default(false)

  @@map("workspaces")
}

model Column {
  id String @id @default(uuid())
  title String @db.VarChar(70)
  order Int @default(0)
  User User @relation(fields: [userId], references: [id])
  userId String
  Workspace Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String
  cards Card[]
  active Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("columns")
}

model Card {
  id String @id @default(uuid())
  title String @db.VarChar(100)
  description String? @db.VarChar()
  User User @relation(fields: [userId], references: [id])
  userId String
  Column Column @relation(fields: [columnId], references: [id])
  columnId String
  comments Comment[]
  active Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  order Int @default(0)

  @@map("cards")
}

model Comment {
  id String @id @default(uuid())
  content String @db.VarChar()
  Card Card @relation(fields: [cardId], references: [id]) 
  cardId String
  User User @relation(fields: [userId], references: [id])
  userId String
  active Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("comments")
}

enum Role {
  ADMIN
  USER
}
